# read in custom graph
parsing:
  map-file: 'resources/isle_of_man_2020-03-14/graph.osm.pbf'
  vehicles:
    category: 'Car'
    are_drivers_picky: false
  nodes:
  - meta: { info: 'NodeId', id: 'node-id' }
  - metric: { unit: 'Latitude', id: 'latitude' }
  - metric: { unit: 'Longitude', id: 'longitude' }
  edges:
    data:
    - meta: { info: 'SrcId', id: 'src-id' }
    - meta: { info: 'DstId', id: 'dst-id' }
    - metric: { unit: 'KilometersPerHour', id: 'kmph' }
    - metric: { unit: 'LaneCount', id: 'lane-count' }
  generating:
    nodes:
    - meta: { info: 'NodeIdx', id: 'node-idx' }
    edges:
    - meta: { info: 'SrcIdx', id: 'src-idx' }
    - meta: { info: 'DstIdx', id: 'dst-idx' }
    - meta: { info: 'EdgeId', id: 'edge-id' }
    - haversine: { unit: 'Kilometers', id: 'kilometers' }
    - copy:
        from: { unit: 'Kilometers', id: 'kilometers' }
        to: { unit: 'Kilometers', id: 'dummy' }
    - calc:
        result: { unit: 'Hours', id: 'hours' }
        a: { unit: 'Kilometers', id: 'kilometers' }
        b: { unit: 'KilometersPerHour', id: 'kmph' }
    - custom:
        id: 'workload'
        unit: 'F64'
        default: 1.0
# define balancing-configs
balancing:
  seed: 42
  number_of_threads: 4
  results-dir: 'custom/results/isle_of_man_2020-03-14'
  number_of_metric-updates: 10
  iter-0-cfg: 'resources/isle_of_man_2020-03-14/balancing/init.yaml'
  iter-i-cfg: 'resources/isle_of_man_2020-03-14/balancing/iteration.yaml'
  multi-ch-constructor:
    fmi-graph: 'graph.fmi'
    contracted-graph: 'graph.ch.fmi'
    # This depends on how many metrics are outsourced to edges-info.csv
    # and includes the new metric as well.
    dimension: 3
    # This is a string, not a float, because it is provided as cmdline-argument
    contraction-ratio: "99.8"
    number_of_threads: 4
    # If true, the edge's nodes' osm-ids instead of their indices are used.
    is_printing_osm-ids: true
    # If true, external edge-ids are piped through the multi-ch-constructor.
    is_using_external_edge-ids: true
  metric-ids:
    distance: 'kilometers'
    lane-count: 'lane-count'
    workload: 'workload'
  explicit_euler:
    # old + (new - old) * correction
    correction: 0.3
  # important to keep non-zero workloads (if generated non-zero):
  # - zero-edges creates more uninteresting shortcuts -> less performance
  # - zero-edges makes Dijkstra running longer/inefficiently
  min_new_metric: 0.1
# define routing
routing:
  route-pairs-file: 'resources/isle_of_man_2020-03-14/10_000.route-pairs'
  is_ch-dijkstra: true
  metrics:
  - id: 'kilometers'
  - id: 'hours'
    tolerated-scale: inf
  - id: 'workload' # gets deactivated in first iteration
# write balanced graph after final iteration
writing:
  graph:
    map-file: 'balanced_graph.fmi'
    nodes:
    - id: 'node-idx'
    - id: 'node-id'
    - id: 'latitude'
    - id: 'longitude'
    edges:
      with_shortcuts: false
      ids:
      - id: 'src-id'
      - id: 'dst-id'
      - id: 'kilometers'
      - id: 'hours'
      - id: 'lane-count'
      - id: 'workload'
      - id: 'dummy'
